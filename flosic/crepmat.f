C UTEP Electronic Structure Lab (2019)
C
C
C ********************************************************************
C
       SUBROUTINE CREPMAT
C ORIGINAL VERSION BY KOBLAR A. JACKSON AND MARK R PEDERSON (1988)
C
C MODIFICATIONS BY D. POREZAG, MAY 95
C                  E. KOCH, JUNE 03
C
       use debug1
       use common3,only : RMAT, NGRP, MULTAB
       use common5,only : ISTSCF
       use common8,only : REP, N_REP, NDMREP, IGEN, LDMREP
! Conversion to implicit none.  Raja Zope Thu Aug 17 14:34:39 MDT 2017

!      INCLUDE  'PARAMAS'  
       INCLUDE  'PARAMA2'  
       INTEGER :: I, ICOL, IDEF, IDIM, IEVC, IGRP, II, IIDIM, INDEX,
     & IOP, IREP, IROW, ISQ, J, JDIM, JEVC, JJ, JREP, JSQ, K, KDMREP,
     & KGRP, KK, KREP, MREP, NDUM
       REAL*8 :: ALBEST , ALPHA, CHAR, DUMMY, E, ELEM, ERROR, F, G, H,
     & OPREAD, PROD, SCRATCH, SUM, TOL, TOLER, TRACE1, TRACE2, TREP,
     & UNIT
       SAVE
       LOGICAL IREAD,EXIST
       DIMENSION KDMREP(MAX_REP),TREP(5,5,MX_GRP),OPREAD(3,3,MX_GRP)
       DIMENSION E(MX_GRP+1),SCRATCH(MX_GRP)
       DIMENSION H(MX_GRP,MX_GRP)
       DIMENSION F(3), G(3,MX_GRP)
       DIMENSION JDIM(MX_GRP),PROD(5,5)
       DIMENSION CHAR(MX_GRP)
       DATA TOLER/1.0D-5/
C
       DO I=1,MAX_REP
        LDMREP(I)=1
       END DO
C
C CHECK LIMITS AND SETUP SOME STUFF
C
       PRINT '(A)','DETERMINING SYMMETRY GROUP'
       IF (NGRP.GT.MX_GRP) THEN
        PRINT *,'CREPMAT: MX_GRP MUST BE AT LEAST: ',NGRP
        CALL STOPIT
       END IF
       ALBEST= 0.1D0
       ALPHA= ALBEST
       F(1)= 3.1412D0
       F(2)= 2.7321D0
       F(3)= 1.4141D0
C
C IF WE START WITH AN OLD HAMILTONIAN OR WAVEFUNCTIONS, MAKE SURE WE 
C HAVE THE RIGHT REPRESENTATION MATRIX AVAILABLE
C FIRST, CHECK FOR DIFFERENCES IN NEW AND OLD MAT
C
       IREAD= .FALSE.
       IF ((ISTSCF.EQ.1).OR.(ISTSCF.EQ.4)) THEN
        OPEN(80,FILE='REPMAT',FORM='UNFORMATTED',STATUS='OLD',ERR=40)
        READ(80,ERR=40) KGRP
        IF (KGRP.GT.MX_GRP) THEN
         PRINT *,'MX_GRP MUST BE AT LEAST: ',KGRP
         CALL STOPIT
        END IF
        IF (KGRP.NE.NGRP) GOTO 40
        READ(80,ERR=40) (((OPREAD(J,I,K), J=1,3), I=1,3), K=1,NGRP)
        DO 30 IGRP=1,NGRP
         ERROR= 0.0D0
         DO 20 I=1,3
          DO 10 J=1,3
           ERROR= ERROR+ABS(RMAT(J,I,IGRP)-OPREAD(J,I,IGRP))
   10     CONTINUE
   20    CONTINUE
         IF (ERROR.GT.TOLER) GOTO 40 
   30   CONTINUE
C
C READ OLD REPRESENTATION
C
        READ(80,ERR=40) KREP
        IF (KREP.GT.MAX_REP) THEN
         PRINT *,'MAX_REP MUST BE AT LEAST: ',KREP
         CALL STOPIT
        END IF
        READ(80,ERR=40)(KDMREP(I), I=1,KREP)
        READ(80,ERR=40)((((REP(J,I,IGRP,IREP), 
     &                 J=1,KDMREP(IREP)), I=1,KDMREP(IREP)), 
     &                 IGRP=1,KGRP), IREP=1,KREP)
        GOTO 50
   40   PRINT *,'CREPMAT: OLD REPRESENTATION MATRIX'
        PRINT *,'IS NOT AVAILABLE OR INCONSISTENT WITH NEW GRPMAT'
        PRINT *,'FILE. PLEASE CHECK THE FILES GRPMAT AND REPMAT'
        CLOSE(80)
        CALL STOPIT
   50   IREAD= .TRUE.
        CLOSE(80)
       END IF
C
C THE 'FAIL' LOOP
C
  150  CONTINUE
C  
C SET UP 'HAMILTONIAN' AND 'OVERLAP' MATRICES
C
       DO 220 I=1,NGRP
        DO 190 J=1,3
         G(J,I)= 0.0D0
         DO 180 K=1,3
          G(J,I)= G(J,I) + F(K)*RMAT(K,J,I)
  180    CONTINUE
  190   CONTINUE
        DO 210 J=1,I
         H(J,I)= 0.0D0
         DO 200 K=1,3
          H(J,I)= H(J,I) + ALPHA*(G(K,I) - G(K,J))**2
  200    CONTINUE
         H(J,I)= -EXP(-H(J,I))
         H(I,J)= H(J,I)
  210   CONTINUE
  220  CONTINUE
C
C GENERATE GROUP MULTIPLICATION TABLE
C
       DO 300 I=1,NGRP
        DO 290 J=1,NGRP
         MULTAB(I,J)= 0
         DO 250 II=1,3
          DO 240 JJ=1,3
           ELEM= 0.0D0
           DO 230 KK=1,3
            ELEM= ELEM + RMAT(II,KK,I)*RMAT(KK,JJ,J)
  230      CONTINUE
           PROD(II,JJ)= ELEM
  240     CONTINUE
  250    CONTINUE
         DO 280 K=1,NGRP
          ERROR= 0.0D0
          DO 270 II=1,3
           DO 260 JJ=1,3
            ERROR= ERROR+ABS(PROD(II,JJ)-RMAT(II,JJ,K))
  260      CONTINUE
  270     CONTINUE
          IF (ERROR.GT.TOLER) GOTO 280
          MULTAB(I,J)= K
          GOTO 290
  280    CONTINUE
         PRINT *,'CREPMAT: MULTIPLICATION TABLE COULD NOT BE'
         PRINT *,'FILLED FOR ELEMENTS ',I,J
         CALL STOPIT
  290   CONTINUE
  300  CONTINUE
C
C PERMUTATION REPRESENTATION AS VECTORS: IPERM(IOP,NCOL) = MULTAB(..)
C DIAGONALIZE "HAMILTONIAN" TO REDUCE PERM. REPRESENTATION
C
       IF (DEBUG) PRINT *,'CALLING DIAGSP_D FROM CREPMAT: ',MX_GRP,NGRP
       CALL DIAGSP_D(MX_GRP,NGRP,H,E,SCRATCH,1)
       E(NGRP+1)= E(NGRP)+100*TOLER*ABS(E(NGRP))+1.0D0
       IF (DEBUG) THEN
        PRINT *,'EIGENVALUES: '
        PRINT 1000, (E(I), I=1,NGRP)
        PRINT *,' '
 1000   FORMAT(4(1X,F16.6))
       END IF
C
C TEST EIGENVECTORS
C
       IF (DEBUG) THEN
        PRINT *,'TESTING EVECS'
        DO 340 IEVC=1,NGRP
         PRINT *,'EVEC ',IEVC
         UNIT= 0.0D0
         DO 310 I=1,NGRP
          UNIT= UNIT + H(I,IEVC)**2
  310    CONTINUE
         PRINT *,'UNIT: ',UNIT
         DO 330 JEVC= IEVC+1,NGRP
          SUM= 0.0D0
          DO 320 K= 1,NGRP
           SUM= SUM + H(K,JEVC)*H(K,IEVC)
  320     CONTINUE
          PRINT *,IEVC,JEVC,SUM
  330    CONTINUE
  340   CONTINUE
        PRINT *,' '
       END IF
C
C CHECK FOR DEGENERACIES
C
       TOL= 1.0D-4
       MREP= 0
       IDIM= 1
       DO 350 I=1,NGRP
        IF (ABS(E(I+1)-E(I)).GT.(TOL*(ABS(E(I))+ABS(E(I+1))))) THEN
         MREP= MREP + 1
         JDIM(MREP)= IDIM
         IDIM= 1
        ELSE
         IDIM= IDIM + 1
        END IF
  350  CONTINUE
       DO I=1,NGRP
         
       ENDDO
C
C PERFORM SIMILARITY TRANSFORMATION ON PERM. REP. TO GET IRRED REP
C
       N_REP= 0
       INDEX= 0
       DO 500 IREP=1,MREP
        IDIM= JDIM(IREP)
        DO 400 IOP=1,NGRP
         DO 390 II=1,IDIM
          DO 380 JJ=1,IDIM
           IROW= INDEX + II
           ICOL= INDEX + JJ
           ELEM= 0.0D0
           DO 370 K=1,NGRP
            ELEM= ELEM + H(MULTAB(K,IOP),IROW)*H(K,ICOL)
  370      CONTINUE
           TREP(JJ,II,IOP)=ELEM
  380     CONTINUE
  390    CONTINUE
  400   CONTINUE
C
C TEST IF NEW REPRESENTATION
C
        DO 440 JREP=1,N_REP
         IIDIM=NDMREP(JREP)
         IF (IDIM.EQ.IIDIM) THEN
          DO 430 IOP=1,NGRP
           TRACE1= 0.0D0
           TRACE2= 0.0D0
           DO 420 II=1,IDIM
            TRACE1= TRACE1 + TREP(II,II,IOP)
            TRACE2= TRACE2 + REP(II,II,IOP,JREP)
  420      CONTINUE
           IF (ABS(TRACE1-TRACE2).GT.TOL) GOTO 440
  430     CONTINUE
C
C NO NEW REPRESENTATION
C
          GOTO 490
         END IF
  440   CONTINUE
C
C MOVE NEW REPRESENTATION TO REP
C
        N_REP= N_REP + 1
        IF (N_REP.GT.MAX_REP) THEN
         PRINT *,'CREPMAT: MAX_REP MUST BE AT LEAST: ',N_REP
         CALL STOPIT
        END IF
        NDMREP(N_REP)= IDIM
        DO 470 IOP=1,NGRP
         DO 460 II=1,IDIM
          DO 450 JJ=1,IDIM
           REP(JJ,II,IOP,N_REP)= TREP(JJ,II,IOP)
  450     CONTINUE
  460    CONTINUE
  470   CONTINUE
C
C UPDATE INDEX 
C
  490   CONTINUE
        INDEX = INDEX + IDIM
  500  CONTINUE
C
C CHECK SUM OF SQUARES OF DIMENSIONS
C ON FAILURE, TRY NEW ALPHA OR EXIT
C
       ISQ= 0
       DO 510 I=1,N_REP
        ISQ= ISQ + NDMREP(I)**2
  510  CONTINUE
       IF (ISQ.NE.NGRP) THEN
        PRINT *,'CREPMAT: SUM OF SQUARES NOT EQUAL TO NGRP'
        PRINT *,'CREPMAT: FAILED TO DETERMINE IRREDUCIBLE REPS'
        write(6,*)' USING REDUCIBLE REPRESENTATION MODE!'
        write(6,*)' SURE HOPE IT WORKS .... ;-)'
        INQUIRE(FILE='REDREP', EXIST=EXIST )
        OPEN(43,FILE='REDREP',FORM='FORMATTED',STATUS='UNKNOWN')
        IDEF=1
        IF(EXIST)READ(43,*)IDEF   
        IF(IDEF.EQ.2)THEN
C IF IDEF=2 TRY TO RUN WITH USER SETTINGS....
           JSQ=0  
           DO I=1,N_REP
           READ(43,*)J,NDMREP(I),LDMREP(I)
           JSQ=JSQ+ LDMREP(I)*(NDMREP(I)/LDMREP(I))**2 
                  IF(J.NE.I)CALL STOPIT
           END DO
           IF(JSQ.NE.NGRP)THEN
           write(6,*)'JSQ, NGRP:',JSQ,NGRP
           write(6,*)'USER SUPPLIED DATA DOES NOT DESCRIBE'
           write(6,*)'A VALID REDUCIBLE REPRESENTATION'
           CALL STOPIT
           END IF
        ELSE   
C IF IDEF=1 RECALCULATE IN CASE GRPMAT FILE HAS CHANGED...
        REWIND(43)
        PRINT *,'YOU MAY HAVE TO EDIT "REDREP" TO RUN CORRECTLY'
        WRITE(43,*)' 1  1=NRLMOL DEFAULT, 2=USER SETTINGS'
           JSQ=0
           DO I=1,N_REP
                    IF(2*(NDMREP(I)/2).EQ.NDMREP(I))THEN
                    LDMREP(I)=2
                    ELSE
                    LDMREP(I)=1
                    END IF
                    JSQ=JSQ+ LDMREP(I)*(NDMREP(I)/LDMREP(I))**2 
           WRITE(43,*)I,NDMREP(I),LDMREP(I),JSQ
           END DO
           IF (JSQ.EQ.NGRP) THEN
           write(6,*)'REDREP MAY BE CORRECT'
           WRITE(43,*)'REDREP MAY BE CORRECT'
           ELSE
           write(6,*)'REDREP IS NOT CORRECT AND MUST BE CHANGED'
           WRITE(43,*)'REDREP IS NOT CORRECT AND MUST BE CHANGED'
           CALL STOPIT
           END IF
        END IF
        CLOSE(43)
       END IF
C
C PRINT DIMENSIONS FOR EACH REPRESENTATION
C
       PRINT '(A,I2)','NUMBER OF REPRESENTATIONS: ',N_REP
       PRINT 1020,(NDMREP(I), I=1,N_REP)
 1020  FORMAT('DIMENSIONS:',30(1X,I1))
C
C TEST FOR EQUIVALENCE OF OLD AND NEW REPRESENTATIONS
C
       IF (IREAD) THEN
        IF (KREP.NE.N_REP) GOTO 550
        DO 530 IREP=1,N_REP
         IF (NDMREP(IREP).NE.KDMREP(IREP)) GOTO 550
  530   CONTINUE
        GOTO 560
  550   PRINT *,'CREPMAT: DETERMINED NUMBER OF REPRESENTATIONS IS'
        PRINT *,'INCONSISTENT WITH NUMBER STORED IN REPMAT'
        CALL STOPIT
C
C OKAY, LET'S READ AND WRITE REPMAT
C
  560   OPEN(80,FILE='REPMAT',FORM='UNFORMATTED',STATUS='OLD')
        REWIND(80)
        READ(80) NDUM
        READ(80) DUMMY
        READ(80) NDUM
        READ(80) NDUM
        READ(80)((((REP(J,I,IGRP,IREP), 
     &          J=1,NDMREP(IREP)), I=1,NDMREP(IREP)), 
     &          IGRP=1,NGRP), IREP=1,N_REP)
        CLOSE(80)
       END IF
       OPEN(80,FILE='REPMAT',FORM='UNFORMATTED',STATUS='UNKNOWN')
       REWIND(80)
       WRITE(80)NGRP
       WRITE(80)(((RMAT(J,I,IGRP), J=1,3), I=1,3), IGRP=1,NGRP)
       WRITE(80)N_REP
       WRITE(80)(NDMREP(IREP), IREP=1,N_REP)
       WRITE(80)((((REP(J,I,IGRP,IREP), 
     &          J=1,NDMREP(IREP)), I=1,NDMREP(IREP)), 
     &          IGRP=1,NGRP), IREP=1,N_REP)
       CLOSE(80)
C
C
C PRINT CHARACTERS
C
       PRINT *,'CHARACTERS OF SYMMETRY OPERATIONS IN GRPMAT:'
       DO IREP=1,N_REP
         DO IGRP=1,NGRP
           CHAR(IGRP)=0.0D0
           DO I=1,NDMREP(IREP)
             CHAR(IGRP)=CHAR(IGRP)+REP(I,I,IGRP,IREP)
           END DO
         ENDDO
         PRINT 1030, IREP, (CHAR(IGRP), IGRP=1,NGRP)
       END DO
 1030  FORMAT('IRREP',I2,':',120(1X,F4.1))
C
C CHECK THE REPRESENTATION MATRIX AND LEAVE
C
       CALL CKRMAT
       END
